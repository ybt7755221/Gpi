basePath: /
definitions:
  controllers.SgrResp:
    properties:
      code:
        example: 1000
        type: integer
      data:
        type: object
      msg:
        example: 请求成功
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: gpi自动文档
  license: {}
  title: gpi文档平台
  version: "1.0"
paths:
  /contents:
    get:
      consumes:
      - text/html
      description: 根据条件获取信息
      parameters:
      - description: 页数，默认1
        in: query
        name: page_num
        type: integer
      - description: 每夜条数，默认50
        in: query
        name: page_size
        type: integer
      - description: 排序。id desc, time asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【GetAll】根据条件获取信息
      tags:
      - contents表操作
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建contents信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【create】创建contents信息
      tags:
      - contents表操作
  /contents/get-by-id/{id}:
    get:
      consumes:
      - text/html
      description: 根据id获取信息
      parameters:
      - description: 主键id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【GetOne】根据id获取信息
      tags:
      - contents表操作
  /contents/update-by-id:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 根据id更新数据
      parameters:
      - description: 主键更新依据此id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【update】根据id更新数据
      tags:
      - contents表操作
  /kafka/:
    post:
      consumes:
      - application/json
      description: 推送kafka消息
      parameters:
      - description: kafka topic-消费topic
        in: path
        name: topic
        required: true
        type: string
      - description: kafka key-消费用的key
        in: path
        name: key
        required: true
        type: string
      - description: kafka value-消费用value
        in: path
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【api】推送kafka消息-生产者接口
      tags:
      - 工具库
  /tool/jwt-token:
    post:
      consumes:
      - application/json
      description: 解析jwt token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【api】解析jwt token
      tags:
      - 工具库
  /users:
    get:
      consumes:
      - text/html
      description: 根据条件获取信息
      parameters:
      - description: 页数，默认1
        in: query
        name: page_num
        type: integer
      - description: 每夜条数，默认50
        in: query
        name: page_size
        type: integer
      - description: 排序。id desc, time asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【GetAll】根据条件获取信息
      tags:
      - users表操作
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建users信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【create】创建users信息
      tags:
      - users表操作
  /users/get-by-id/{id}:
    get:
      consumes:
      - text/html
      description: 根据id获取信息
      parameters:
      - description: 主键id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【GetOne】根据id获取信息
      tags:
      - users表操作
  /users/update-by-id:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 根据id更新数据
      parameters:
      - description: 主键更新依据此id
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SgrResp'
      summary: 【update】根据id更新数据
      tags:
      - users表操作
swagger: "2.0"
